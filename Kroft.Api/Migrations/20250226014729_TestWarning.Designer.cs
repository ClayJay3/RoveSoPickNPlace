// <auto-generated />
using System;
using Kroft.Api.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kroft.Api.Migrations
{
    [DbContext(typeof(KroftDatabase))]
    [Migration("20250226014729_TestWarning")]
    partial class TestWarning
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("Kroft.Models.Accounts.UserProfile", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("HashedPassword")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PermissionLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Salt")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("61889689-5a72-40ec-bf80-560b85d5775b"),
                            Address = "123 Admin St",
                            City = "Admin City",
                            Country = "Admin Country",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            HashedPassword = "A93ehbodEKbfuFxWmcKaB0SoPb47/twlnlnXt2bJYJS3ofrr8WTmOnt6oWKhpzpzbuXxdXUdF5ScSF5PBHDhkg==",
                            LastName = "User",
                            PermissionLevel = 3,
                            PhoneNumber = "123-456-7890",
                            PostalCode = "12345",
                            Salt = "nNXwKB8R6/KR2M3aWjFX/PyqSQ0WfNAL7qNARdyFdMujoGC8H2c7JcumlQckbvIG0sWyrzeKKAOHCXbaVnov23aAzrIOEGttZkZRYVspzGCoOMyOxwm99SyAWp2eWlSn2F977hAs0ic3JQ0cKCcCHQKYNUbZmXWikeXXBqKLnLM=",
                            State = "Admin State",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Kroft.Models.Geospatial.GPSWaypoint", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Altitude")
                        .HasColumnType("REAL");

                    b.Property<double?>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double?>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double?>("SearchRadius")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WaypointColor")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Waypoints");
                });
#pragma warning restore 612, 618
        }
    }
}
