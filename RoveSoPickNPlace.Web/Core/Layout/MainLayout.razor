@inherits LayoutComponentBase
@inject ThemeService _ThemeService
@inject CookieThemeService _CookieThemeService
@inject NavigationManager NavigationManager
@inject IToastService _ToastsService
@inject ProtectedLocalStorage _ProtectedLocalStorage
@inject ProtectedSessionStorage _ProtectedSessionStorage

<PageTitle>RoveSoPickNPlace</PageTitle>

<RadzenComponents />
<RadzenLayout Style="grid-template-areas: 'rz-sidebar rz-header' 'rz-sidebar rz-body'">
        <RadzenHeader>
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Style="width: 100%;">
                <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" Gap="10">
                    <RadzenLabel Text="Home Page" />
                </RadzenStack>
                <RadzenDropDown Name="ThemeDropDown" TValue="string" Value="@_ThemeService.Theme" ValueChanged="@ChangeTheme" Data="@Themes.Free" TextProperty=@nameof(Theme.Text) ValueProperty=@nameof(Theme.Value) />
            </RadzenStack>
            <BlazoredToasts ShowProgressBar="true" Timeout="5" />
        </RadzenHeader>
        <RadzenSidebar>
            <RadzenPanelMenu>
                <RadzenPanelMenuItem Text="Home" Icon="home" Path="/"/>
            </RadzenPanelMenu>
        </RadzenSidebar>
    <RadzenBody>
        <div class="rz-p-4">
            @Body
        </div>
    </RadzenBody>
</RadzenLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    // Declare a variable to control the sidebar state.
    
    protected override void OnInitialized()
    {
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Now it's safe to perform JS interop calls.
            await InvokeAsync(StateHasChanged);
        }
    }

    void ChangeTheme(string value)
    {
        _ThemeService.SetTheme(value);
        _ThemeService.SetWcag(true);
    }
}
