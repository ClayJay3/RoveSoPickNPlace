@inherits LayoutComponentBase
@inject ThemeService _ThemeService
@inject CookieThemeService _CookieThemeService
@inject NavigationManager NavigationManager
@inject IToastService _ToastsService

<PageTitle>RoveSoPickNPlace</PageTitle>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    // Declare a variable to control the sidebar state.
    private bool sidebarExpanded = true;
    private bool hasRestoredAuth = false;

    
    protected override void OnInitialized()
    {
        _ToastsService.ShowInfo("TEST");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !hasRestoredAuth)
        {
            // Now it's safe to perform JS interop calls.
            hasRestoredAuth = true;
            // Call StateHasChanged to re-render the component if necessary.
            await InvokeAsync(StateHasChanged);
        }
    }
    private void ToggleSidebar()
    {
        // Toggle the sidebar state.
        sidebarExpanded = !sidebarExpanded;
    }

    void ChangeTheme(string value)
    {
        _ThemeService.SetTheme(value);
        _ThemeService.SetWcag(true);
    }
}
